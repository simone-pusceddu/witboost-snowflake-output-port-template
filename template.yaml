apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: snowflake-outputport-template-skeleton
  title: Snowflake Output Port (Skeleton)
  description: Create a Snowflake Output Port to expose data to the Data Product consumers.
  mesh:
    icon: https://avatars.githubusercontent.com/u/6453780?s=280&v=4
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - snowflake
    - output-port
spec:
  generates: componenttype:default/outputport
  owner: agilelab
  type: outputport
  parameters:
    - title: Component metadata
      description: Basic information for this component.
      required:
        - name
        - domain
        - dataproduct
        - description
        - dependsOn
      properties:
        name:
          title: Name
          type: string
          description: Required. The name of the component.
          ui:field: EntityNamePicker
          default: Snowflake Output Port
          ui:options:
            allowArbitraryValues: true
        description:
          title: Description
          type: string
          description: Required. Help others understand what this component is for. What
            data will it expose?
        domain:
          title: Domain
          type: string
          description: Required. Domain of the Data Product this component belongs to.
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - Domain
        dataproduct:
          title: Data Product
          type: string
          description: Required. Data Product this component belongs to.
          ui:field: EntityPicker
          ui:filter:
            - fieldName: domain
              entityPath: spec.domain
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - System
        identifier:
          title: Identifier
          type: string
          description: Autogenerated from the information above. A unique identifier for
            the component. It will not be editable after creation and is a
            string composed of [a-zA-Z] separated by any of [-_].
          ui:field: ComponentIdentifierPicker
          ui:options:
            allowArbitraryValues: false
        developmentGroup:
          title: Development Group
          type: string
          description: Automatically selected from the Data Product metadata. Data Product
            development group.
          ui:field: EntitySelectionPicker
          ui:fieldName: dataproduct
          ui:property: spec.owner
          ui:options:
            allowArbitraryValues: false
        dependsOn:
          title: Dependencies
          type: array
          description: A component could depend on other components in the same Data
            Product. This information will be used to deploy the components in
            such an order that their dependencies already exist.
          default: []
          items:
            type: string
            ui:field: EntityComponentsPicker
            ui:componentsFilter: storage
            ui:fieldName: dataproduct
            ui:options:
              allowArbitraryValues: false
        tags:
          title: Tags
          type: array
          description: Tags for the component
          default: []
          items:
            type: string
        domainName:
          type: string
          ui:field: EntitySelectionPicker
          ui:fieldName: domain
          ui:property: spec.mesh.name
          ui:options:
            allowArbitraryValues: false
          ui:widget: hidden
        dataproductName:
          type: string
          ui:field: EntitySelectionPicker
          ui:fieldName: dataproduct
          ui:property: spec.mesh.name
          ui:options:
            allowArbitraryValues: false
          ui:widget: hidden
    - title: Terms & Conditions and SLA
      description: Specify Terms & Conditions and Service Level Agreement information
        for this Output Port.
      required:
        - termsAndConditions
        - intervalOfChange
        - timeliness
        - upTime
      properties:
        termsAndConditions:
          title: Terms and Conditions
          type: string
          description: Required. Terms and Conditions that apply to the data.
          default: Can be used for production purposes.
        intervalOfChange:
          title: Interval of change
          type: string
          description: Required. How often the data is refreshed.
          default: 2BD
        timeliness:
          title: Timeliness
          type: string
          description: Required. Timeliness of the data.
          default: 2BD
        upTime:
          title: Uptime
          type: string
          description: Required. Uptime of the Output Port.
          default: 99.9%
    - title: Data Sharing Agreement
      description: Specify the Data Sharing Agreement clauses for this Data product.
      required:
        - purpose
        - billing
        - security
        - intendedUsage
        - limitations
        - lifeCycle
        - confidentiality
      properties:
        purpose:
          title: Purpose
          type: string
          description: Required. Purpose of the data.
          default: Foundational data for downstream sue cases.
        billing:
          title: Billing
          type: string
          description: Required. Billing applied to data usage.
          default: None.
        security:
          title: Security
          type: string
          description: Required. Security policies that apply to the data.
          default: Platform standard security policies.
        intendedUsage:
          title: Intended Usage
          type: string
          description: Required. Intended usage for the data.
          default: Any downstream use cases.
        limitations:
          title: Limitations
          type: string
          description: Required. Limitations of the data.
          default: Needs joining with other datasets (eg customer data) for most
            analytical use cases.
        lifeCycle:
          title: Lifecycle
          type: string
          description: Required. Lifecycle of the data.
          default: Data loaded every two days and typically never deleted.
        confidentiality:
          title: Confidentiality
          type: string
          description: Required. Confidentiality of the data.
          default: None.
    - title: Expectations Suite
      properties:
        expectationsSuite:
          title: Define your suite of expectations
          type: array
          ui:ArrayFieldTemplate: ArrayTableTemplate
          items:
            type: object
            ui:ObjectFieldTemplate: TableRowTemplate
            required:
              - expectation_type
            properties:
              expectation_type:
                title: Expectation type
                type: string
                default: ""
                enum:
                  - expect_column_values_to_be_null
                  - expect_column_values_to_not_be_null
                  - expect_column_max_to_be_between
                  - expect_column_min_to_be_between
                  - expect_column_stdev_to_be_between
                  - expect_column_values_to_be_in_set
                  - expect_column_values_to_not_be_in_set
                  - expect_column_values_to_match_regex
                  - expect_column_values_to_not_match_regex
                enumNames:
                  - ExpectColumnValuesToBeNull
                  - ExpectColumnValuesToNotBeNull
                  - ExpectColumnMaxToBeBetween
                  - ExpectColumnMinToBeBetween
                  - ExpectColumnStdevToBeBetween
                  - ExpectColumnValuesToBeInSet
                  - ExpectColumnValuesToNotBeInSet
                  - ExpectColumnValuesToMatchRegex
                  - ExpectColumnValuesToNotMatchRegex
            allOf:
              - if:
                  properties:
                    expectation_type:
                      oneOf:
                        - const: expect_column_values_to_be_null
                        - const: expect_column_values_to_not_be_null
                then:
                  properties:
                    column:
                      title: Column
                      type: string
                      description: The column name
                  required:
                    - column
              - if:
                  properties:
                    expectation_type:
                      oneOf:
                        - const: expect_column_max_to_be_between
                        - const: expect_column_min_to_be_between
                        - const: expect_column_stdev_to_be_between
                then:
                  properties:
                    column:
                      title: Column
                      type: string
                      description: The column name
                    min_value:
                      title: Min value
                      type: number
                      description: The minimum value of the acceptable range for the column
                    max_value:
                      title: Max value
                      type: number
                      description: The maximum value of the acceptable range for the column
                    strict_min:
                      title: Strict min
                      type: boolean
                      description: If True, the lower bound of the column acceptable range must be strictly larger than min_value, default=False
                    strict_max:
                      title: Strict max
                      type: boolean
                      description: If True, the upper bound of the column acceptable range must be strictly smaller than max_value, default=False
                  required:
                    - column
                    - min_value
                    - max_value
              - if:
                  properties:
                    expectation_type:
                      oneOf:
                        - const: expect_column_values_to_be_in_set
                        - const: expect_column_values_to_not_be_in_set
                then:
                  properties:
                    column:
                      title: Column
                      type: string
                      description: The column name
                    value_set:
                      title: Value Set
                      description: A set of objects used for comparison
                      type: array
                      minItems: 1
                      items:
                        type: string
                  required:
                    - column
                    - value_set
              - if:
                  properties:
                    expectation_type:
                      oneOf:
                        - const: expect_column_values_to_match_regex
                        - const: expect_column_values_to_not_match_regex
                then:
                  properties:
                    column:
                      title: Column
                      type: string
                      description: The column name
                    regex:
                      title: Regex
                      type: string
                      description: The regular expression the column entries should match
                  required:
                    - column
                    - regex
    - title: Snowflake deployment information
      required:
        - underlyingStorage
        - tableName
        - viewName
      properties:
        hiddenKind:
          type: string
          default: storage
          ui:widget: hidden
          ui:disabled: true
        underlyingStorage:
          title: Storage Area
          type: object
          ui:field: EntityPicker
          ui:fieldName: dataproduct
          ui:options:
            allowArbitraryValues: false
            storeRawEntity: true
            allowedKinds:
              - Component
          ui:filter:
            - fieldName: dataproduct
              entityPath: spec.system
            - fieldName: hiddenKind
              entityPath: spec.type
          description: Required. An Output Port has to get data from a Storage Area in the
            same Data Product.
        tableName:
          type: object
          ui:field: DescriptorPicker
          ui:options:
            allowArbitraryValues: false
          title: Table Name
          description: Required. Choose a table from the ones defined by the Storage Area
            above. This is where the Output Port view will get its data from.
          sourceType: field
          source: underlyingStorage
          optionsAt: spec.mesh.specific.tables
          optionsDisplayNameAt: tableName
        database:
          title: Database
          type: string
          description: Name of the database in Snowflake. If not provided, the default
            value (In this case, domain name) will be assigned during the
            creation.
          ui:field: RegexPicker
          validation:
            errorMessage: The database name should contain only alphanumeric characters or
              "_"
            regularExpression: ^[a-zA-Z0-9_]*$
        schema:
          title: Schema
          type: string
          description: Name of the schema inside the Snowflake database specified above.
            If not provided, the default value (In this case, dpname_dpversion)
            will be assigned during the creation.
          ui:field: RegexPicker
          validation:
            errorMessage: The schema name should contain only alphanumeric characters or "_"
            regularExpression: ^[a-zA-Z0-9_]*$
        viewName:
          title: View name
          type: string
          description: Required. Name of the view that will be created inside the
            Snowflake schema specified above.
          ui:field: RegexPicker
          validation:
            errorMessage: The view name should contain only alphanumeric characters or "_"
            regularExpression: ^[a-zA-Z0-9_]+$
    - title: View schema
      description: Definition of the columns of the view.
      properties:
        schemaColumns:
          title: Column Definitions
          type: array
          ui:ArrayFieldTemplate: ArrayTableTemplate
          items:
            type: object
            ui:ObjectFieldTemplate: TableRowTemplate
            required:
              - name
              - dataType
            properties:
              name:
                type: string
                title: Name
              description:
                type: string
                title: Description
              dataType:
                type: string
                default: TEXT
                title: Data Type
                enum:
                  - TEXT
                  - NUMBER
                  - DATE
                  - BOOLEAN
              constraint:
                type: string
                title: Constraint
                default: (no constraint)
                enum:
                  - PRIMARY_KEY
                  - NOT_NULL
                  - UNIQUE
                  - (no constraint)
            allOf:
              - if:
                  properties:
                    dataType:
                      oneOf:
                        - const: TEXT
                then:
                  properties:
                    dataLength:
                      title: Length
                      type: integer
                      description: Maximum length of the text
                      default: 16777216
                  required:
                    - dataLength
              - if:
                  properties:
                    dataType:
                      oneOf:
                        - const: NUMBER
                then:
                  properties:
                    precision:
                      title: Precision
                      type: integer
                      description: Precision of the numeric data type
                      minimum: 1
                      maximum: 38
                      default: 38
                    scale:
                      title: Scale
                      type: integer
                      description: Scale of the numeric data type; cannot be greater than precision
                        minus 1
                      minimum: 0
                      maximum: 37
                      default: 0
                  required:
                    - precision
                    - scale
              - if: true
                then:
                  properties:
                    businessTerms:
                      title: Business Terms
                      type: array
                      description: Multiple selection for fixed tags
                      uniqueItems: true
                      ui:style:
                        minWidth: 400
                      items:
                        type: string
                        enum:
                          - Raw
                          - Derived
                          - Metadata
                          - Identifier
                          - Dimension
                          - Fact
                    piiCheck:
                      title: PII
                      type: boolean
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: .
        values:
          name: ${{ parameters.name }}
          domainName: ${{ parameters.domainName }}
          dataproductName: ${{ parameters.dataproductName }}
          description: ${{ parameters.description }}
          domain: ${{ parameters.domain }}
          dataproduct: ${{ parameters.dataproduct }}
          identifier: ${{ parameters.identifier }}
          developmentGroup: ${{ parameters.developmentGroup }}
          dependsOn: ${{ parameters.dependsOn }}
          tags: ${{ parameters.tags }}
          termsAndConditions: ${{ parameters.termsAndConditions }}
          intervalOfChange: ${{ parameters.intervalOfChange }}
          timeliness: ${{ parameters.timeliness }}
          upTime: ${{ parameters.upTime }}
          purpose: ${{ parameters.purpose }}
          billing: ${{ parameters.billing }}
          security: ${{ parameters.security }}
          intendedUsage: ${{ parameters.intendedUsage }}
          limitations: ${{ parameters.limitations }}
          lifeCycle: ${{ parameters.lifeCycle }}
          confidentiality: ${{ parameters.confidentiality }}
          expectationsSuite: ${{ parameters.expectationsSuite }}
          database: ${{ parameters.database }}
          schema: ${{ parameters.schema }}
          viewName: ${{parameters.viewName}}
          underlyingStorage: ${{parameters.underlyingStorage}}
          tableName: ${{parameters.tableName.value.tableName}}
          schemaColumns: ${{ parameters.schemaColumns }}
          creationDate: ${{ parameters.creationDate }}
          useCaseTemplateId: urn:dmb:utm:snowflake-outputport-template:0.0.0
          infrastructureTemplateId: urn:dmb:itm:snowflake-outputport-provisioner:0
          repoUrl: gitlab.com?owner=AgileDMBSandbox%2F${{orgname}}%2Fmesh.repository%2F${{
            parameters.domain | replace(r/domain:| |-/, "") }}%2F${{
            parameters.dataproduct.split(".")[1] | replace(r/ |-/g, "")
            }}&repo=${{ parameters.name.split(" ") | join("") | lower }}
          rootDirectory: .
          artifact_id: ${{ parameters.name }}
          useCaseTemplateVersion: 0.0.0
    - id: publish
      name: Publish
      action: witboostMeshComponent:publish:gitlab
      input:
        allowedHosts:
          - gitlab.com
        description: This is ${{ parameters.name }}
        repoUrl: gitlab.com?owner=simone.pusceddu&repo=${{ parameters.name.split(" ") | join("") | lower }}
        rootDirectory: .
        dataproduct: ${{ parameters.dataproduct }}
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
